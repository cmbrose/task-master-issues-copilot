name: 'Taskmaster Generate'
description: 'Generate task graph and GitHub issues from PRD files'
author: 'Taskmaster Team'

inputs:
  # Repository checkout configuration
  repository:
    description: 'Repository name (owner/repo) to checkout. Defaults to current repository'
    required: false
    default: ''
  ref:
    description: 'The branch, tag or SHA to checkout. Defaults to default branch'
    required: false
    default: ''
  checkout-token:
    description: 'GitHub token for repository checkout. Uses github-token if not specified'
    required: false
    default: ''
  ssh-key:
    description: 'SSH private key for repository access'
    required: false
    default: ''
  fetch-depth:
    description: 'Number of commits to fetch. 0 = all history, 1 = shallow clone'
    required: false
    default: '1'
  checkout-path:
    description: 'Relative path where the repository will be placed'
    required: false
    default: ''
  clean:
    description: 'Whether to execute git clean before fetching'
    required: false
    default: 'true'
  persist-credentials:
    description: 'Whether to persist credentials for later git operations'
    required: false
    default: 'true'
  skip-checkout:
    description: 'Skip repository checkout (assumes repository is already checked out)'
    required: false
    default: 'false'
  
  # Taskmaster configuration
  complexity-threshold:
    description: 'Maximum complexity threshold for task breakdown'
    required: false
    default: '40'
  max-depth:
    description: 'Maximum depth for automatic task recursion'
    required: false
    default: '3'
  prd-path-glob:
    description: 'Path glob pattern for PRD files'
    required: false
    default: 'docs/**.prd.md'
  taskmaster-args:
    description: 'Additional arguments to pass to Taskmaster CLI'
    required: false
    default: ''
  taskmaster-version:
    description: 'Version of Taskmaster CLI to use'
    required: false
    default: '1.0.0'
  taskmaster-base-url:
    description: 'Base URL for Taskmaster CLI downloads'
    required: false
    default: 'https://github.com/taskmaster-ai/taskmaster/releases/download'
  force-download:
    description: 'Force re-download of Taskmaster CLI binary'
    required: false
    default: 'false'
  github-token:
    description: 'GitHub token for API access'
    required: true

outputs:
  task-graph:
    description: 'Path to generated task graph JSON file'
  task-graph-generated:
    description: 'Whether task-graph.json was successfully generated (true/false)'
  issues-created:
    description: 'Number of issues created or updated'
  artifact-id:
    description: 'ID of the uploaded task graph artifact'
  artifact-name:
    description: 'Name of the uploaded task graph artifact'
  artifact-size:
    description: 'Size of the uploaded artifact in bytes'
  metadata-prd-version:
    description: 'PRD version from the uploaded artifact metadata'
  metadata-generation-timestamp:
    description: 'Generation timestamp from the uploaded artifact metadata'
  metadata-complexity-threshold:
    description: 'Complexity threshold from the uploaded artifact metadata'
  metadata-max-depth:
    description: 'Max depth from the uploaded artifact metadata'
  metadata-total-tasks:
    description: 'Total tasks count from the uploaded artifact metadata'
  metadata-leaf-tasks-count:
    description: 'Leaf tasks count from the uploaded artifact metadata'
  metadata-task-hierarchy-depth:
    description: 'Task hierarchy depth from the uploaded artifact metadata'

runs:
  using: 'composite'
  steps:
    - name: Checkout Repository
      if: inputs.skip-checkout != 'true'
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repository != '' && inputs.repository || github.repository }}
        ref: ${{ inputs.ref }}
        token: ${{ inputs.checkout-token != '' && inputs.checkout-token || inputs.github-token }}
        ssh-key: ${{ inputs.ssh-key }}
        fetch-depth: ${{ inputs.fetch-depth }}
        path: ${{ inputs.checkout-path }}
        clean: ${{ inputs.clean }}
        persist-credentials: ${{ inputs.persist-credentials }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install dependencies
      run: npm install
      shell: bash
      working-directory: ${{ github.action_path }}
    
    - name: Run Taskmaster Generate
      run: npx ts-node src/main.ts
      shell: bash
      working-directory: ${{ github.action_path }}
      env:
        INPUT_COMPLEXITY-THRESHOLD: ${{ inputs.complexity-threshold }}
        INPUT_MAX-DEPTH: ${{ inputs.max-depth }}
        INPUT_PRD-PATH-GLOB: ${{ inputs.prd-path-glob }}
        INPUT_TASKMASTER-ARGS: ${{ inputs.taskmaster-args }}
        INPUT_TASKMASTER-VERSION: ${{ inputs.taskmaster-version }}
        INPUT_TASKMASTER-BASE-URL: ${{ inputs.taskmaster-base-url }}
        INPUT_FORCE-DOWNLOAD: ${{ inputs.force-download }}
        INPUT_GITHUB-TOKEN: ${{ inputs.github-token }}

branding:
  icon: 'list'
  color: 'blue'